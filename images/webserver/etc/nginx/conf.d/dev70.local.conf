server {
  listen 80;
  listen [::]:80;

  server_name dev70.local;

  root /var/www/html;

  index index.html index.htm index.php cart.php home.php index.nginx-debian.html;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ \.php$ {
    fastcgi_pass php7.0-fpm-webserver;
    fastcgi_index index.php;

    include fastcgi_params;
  }

  location ~ /\.ht {
    deny all;
  }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name dev70.local;

  root /var/www/html;

  index index.html index.htm index.php cart.php home.php index.nginx-debian.html;

  location / {
    try_files $uri $uri/ =404;
  }

  location ~ \.php$ {
    fastcgi_pass php7.0-fpm-webserver;
    fastcgi_index index.php;

    include fastcgi_params;
  }

  location ~ /\.ht {
    deny all;
  }

  # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
  ssl_certificate /etc/ssl/self_signed/self_signed.crt;
  ssl_certificate_key /etc/ssl/self_signed/self_signed.key;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

  # modern configuration. tweak to your needs.
  ssl_protocols TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
  ssl_prefer_server_ciphers on;

  # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
  add_header Strict-Transport-Security max-age=15768000;

  # OCSP Stapling ---
  # fetch OCSP records from URL in ssl_certificate and cache them
  #ssl_stapling on;
  #ssl_stapling_verify on;

  ## verify chain of trust of OCSP response using Root CA and Intermediate certs
  #ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;
}
